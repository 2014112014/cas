plugins {
    id "org.springframework.boot" version "${springBootVersion}"
    id "io.spring.dependency-management" version "${springDependencyManagementPluginVersion}"
    id "io.freefair.lombok" version "${lombokPluginVersion}"
    id "java-library"
}

repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
        mavenContent { snapshotsOnly() }
    }
}

dependencyManagement {
    imports {
        mavenBom "io.spring.initializr:initializr-bom:${springInitializrVersion}"
    }
}

springBoot {
    buildInfo()
    mainClassName = "org.apereo.cas.CasOverlayInitializrApplication"
}

dependencies {

    implementation "org.jooq:jool:0.9.14"
    implementation "org.jsoup:jsoup:1.13.1"
    implementation "com.github.spullara.mustache.java:compiler:0.9.6"
    implementation "org.springframework.boot:spring-boot-starter-web"

    implementation "io.spring.initializr:initializr-web"
    implementation "io.spring.initializr:initializr-actuator"
    implementation "io.spring.initializr:initializr-generator-spring"
    implementation "io.spring.initializr:initializr-generator"
    implementation "io.spring.initializr:initializr-generator"

    implementation "org.apereo.cas:cas-server-core-configuration-metadata-repository:${casVersion}"
    implementation "org.apereo.cas:cas-server-core-api-configuration-model:${casVersion}"

    runtime "org.springframework.boot:spring-boot-starter-tomcat"
}

bootJar {
    archiveName "app.jar"
    baseName "app"
}

bootRun {
    def list = []
    list.add("-Xrunjdwp:transport=dt_socket,address=5005,server=y,suspend=n")

    jvmArgs = list

    def appArgList = []
    args = appArgList
}

task copyWrapper(type: Copy) {
    from "../gradle/wrapper"
    into "src/main/resources/overlay/gradle/wrapper"
}

task copyWrapperExecutables(type: Copy) {
    from "../gradlew", "../gradlew.bat"
    into "src/main/resources/overlay/gradle/exec"
}

rootProject.tasks["wrapper"].finalizedBy([copyWrapper, copyWrapperExecutables]) 
build.dependsOn([copyWrapper, copyWrapperExecutables])
